set nocompatible              " be iMproved, required
filetype off                  " required

call plug#begin('~/.vim/plugged')
Plug 'tpope/vim-fugitive'
Plug 'scrooloose/syntastic'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-repeat'
Plug 'bling/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'unblevable/quick-scope'
Plug 'pearofducks/ansible-vim'
Plug 'airblade/vim-gitgutter'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
Plug 'tomasr/molokai'
Plug 'wellle/targets.vim'

call plug#end()

filetype plugin on
syntax on
set background=dark
set t_Co=256
colo molokai
" Disable mouse click position change
set mouse-=a
" Clear background color from loaded theme
highlight Normal ctermbg=NONE
highlight nonText ctermbg=NONE

filetype plugin indent on
set tabstop=2 shiftwidth=2 expandtab
set relativenumber
set number
set updatetime=250
let mapleader = "\<Space>"


" Vim temp files outside of working directories
set dir=~/.tmp/swap/
set backup
set backupdir=~/.tmp/backup/
set undofile
set undodir=~/.tmp/undo/

" Enable Airline
let g:airline#extensions#tabline#enabled = 1
let g:airline_theme='wombat'
let g:airline_powerline_fonts = 1

" Quickscope
" let g:qs_enable = 1
" let g:qs_enable_char_list = [ 'f', 'F', 't', 'T' ]
let g:qs_highlight_on_keys = ['f', 'F', 't', 'T']
" function! Quick_scope_selective(movement)
"     let needs_disabling = 0
"     if !g:qs_enable
"         QuickScopeToggle
"         redraw
"         let needs_disabling = 1
"     endif
"     let letter = nr2char(getchar())
"     if needs_disabling
"         QuickScopeToggle
"     endif
"     return a:movement . letter
" endfunction

" for i in g:qs_enable_char_list
"   execute 'noremap <expr> <silent>' . i . " Quick_scope_selective('". i . "')"
" endfor

" use jj to exit insert mode
imap jj <Esc>

" FZF
" Mapping selecting mappings
nmap <leader><tab> <plug>(fzf-maps-n)
xmap <leader><tab> <plug>(fzf-maps-x)
omap <leader><tab> <plug>(fzf-maps-o)

" Insert mode completion
imap <c-x><c-k> <plug>(fzf-complete-word)
imap <c-x><c-f> <plug>(fzf-complete-path)
imap <c-x><c-j> <plug>(fzf-complete-file-ag)
imap <c-x><c-l> <plug>(fzf-complete-line)

" Advanced customization using autoload functions
inoremap <expr> <c-x><c-k> fzf#vim#complete#word({'left': '15%'})
nnoremap <silent> <C-p> :Files<cr>
nnoremap <silent> <leader>ag :Ag<space>
nnoremap <silent> <leader>p :Files<cr>
"
" GRAVEYARD
"
"
"
"
" Easier split navigation nnoremap <C-J> <C-W><C-J>
" nnoremap <C-K> <C-W><C-K>
" nnoremap <C-L> <C-W><C-L>
" nnoremap <C-H> <C-W><C-H>

" inoremap <C-J> <C-W><C-J>
" inoremap <C-K> <C-W><C-K>
" inoremap <C-L> <C-W><C-L>
" inoremap <C-H> <C-W><C-H>
"
" Align blocks of text and keep them selected
" vmap < <gv
" vmap > >gsv
